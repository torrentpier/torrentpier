function BBCode(t){var e=document.getElementById(t);this.construct(e)}function AddSelectedText(t,e){document.post.message.caretPos?document.post.message.caretPos.text=t+document.post.message.caretPos.text+e:document.post.message.value+=t+e,document.post.message.focus()}function InsertBBCode(t){AddSelectedText("["+t+"]","[/"+t+"]")}function storeCaret(t){t.createTextRange&&(t.caretPos=document.selection.createRange().duplicate())}function initPostBBCode(t){$("span.post-hr",t).html('<hr align="left" />'),initCodes(t),initQuotes(t),initExternalLinks(t),initPostImages(t),initSpoilers(t),initMedia(t)}function initCodes(t){$("div.c-body",t).each(function(){$(this).before('<div class="c-head"><b>'+bbl.code+":</b></div>")})}function initQuotes(t){$("div.q",t).each(function(){var t=$(this),e=$(this).attr("head"),i=e?"<b>"+e+"</b> "+bbl.wrote+":":"<b>"+bbl.quote+"</b>";(quoted_pid=t.children("u.q-post:first").text())&&(i+=' <a href="'+($("#post_"+quoted_pid).length?"#"+quoted_pid:"./viewtopic.php?p="+quoted_pid+"#"+quoted_pid)+'" title="'+bbl.quoted_post+'"><img src="'+bb_url+'styles/templates/default/images/icon_latest_reply.gif" class="icon2" alt="" /></a>');t.before('<div class="q-head">'+i+"</div>")})}function initPostImages(t){if(!hidePostImg){var e=$("div.sp-body var.postImg",t);$("var.postImg",t).not(e).each(function(){var t=$(this),e=t.attr("title"),i=$('<img src="'+e+'" class="'+t.attr("class")+'" alt="pic" />');i=fixPostImage(i);var n=t.hasClass("postImgAligned")?postImgAligned_MaxWidth:postImg_MaxWidth;if(i.bind("click",function(){return imgFit(this,n)}),user.opt_js.i_aft_l){$("#preload").append(i);var a='<a href="'+e+'" target="_blank"><img src="'+bb_url+'styles/images/pic_loading.gif" alt="" /></a>';t.html(a),$.browser.msie&&t.after("<wbr>"),i.one("load",function(){imgFit(this,n),t.empty().append(this)})}else i.one("load",function(){imgFit(this,n)}),t.empty().append(i),$.browser.msie&&t.after("<wbr>")})}}function initSpoilers(t){$("div.sp-body",t).each(function(){var t=$(this),e=$.trim(this.title)||""+bbl.spoiler_head;this.title="";var i=$('<div class="sp-head folded clickable">'+e+"</div>");i.insertBefore(t).click(function(e){if(!t.hasClass("inited")){initPostImages(t);var n=$('<div class="sp-fold clickable">['+bbl.spoiler_close+"]</div>").click(function(){$.scrollTo(i,{duration:200,axis:"y",offset:-200}),i.click().animate({opacity:.1},500).animate({opacity:1},700)});t.prepend('<div class="clear"></div>').append('<div class="clear"></div>').append(n).addClass("inited")}if(e.shiftKey){e.stopPropagation(),e.shiftKey=!1;var a=$(this).hasClass("unfolded");$("div.sp-head",$(t.parents("td")[0])).filter(function(){return $(this).hasClass("unfolded")?a:!a}).click()}else $(this).toggleClass("unfolded"),t.slideToggle("fast")})})}function initExternalLinks(t){t=t||"body";ExternalLinks_InNewWindow&&$("a.postLink:not([href*='"+window.location.hostname+"/'])",t).attr({target:"_blank"})}function fixPostImage(t){return t[0].src.match(/imagebanana|hidebehind/i)&&t.wrap('<a href="'+this.src+'" target="_blank"></a>').attr({src:bb_url+"styles/images/smiles/tr_oops.gif",title:""+bbl.scr_rules}),t}function initMedia(t){for(var e=$("a.postLink",t),i=0;i<e.length;i++){var n=e[i];if("string"==typeof n.href&&/^http(?:s|):\/\/www.youtube.com\/watch\?(.*)?(&?v=([a-z0-9\-_]+))(.*)?|http:\/\/youtu.be\/.+/i.test(n.href)){var a=document.createElement("span");a.className="YTLink",a.innerHTML='<span title="'+bbl.play_on+'" class="YTLinkButton">&#9658;</span>',window.addEvent(a,"click",function(t){var e=t.target.nextSibling.href.replace(/^http(?:s|):\/\/www.youtube.com\/watch\?(.*)?(&?v=([a-z0-9\-_]+))(.*)?|http:\/\/youtu.be\//gi,"http://www.youtube.com/embed/$3"),i=""!==t.target.nextSibling.innerText?t.target.nextSibling.innerText:t.target.nextSibling.href;$("#Panel_youtube").remove(),ypanel("youtube",{title:"<b>"+i+"</b>",resizing:0,width:862,height:550,content:'<iframe width="853" height="493" frameborder="0" allowfullscreen="" src="'+e+'?wmode=opaque"></iframe>'})}),n.parentNode.insertBefore(a,n),a.appendChild(n)}}}function $p(){for(var t=[],e=0;e<arguments.length;e++){var i=arguments[e];if("string"==typeof i&&(i=document.getElementById(i)),1===arguments.length)return i;t.push(i)}return t}function addEvent(t,e,i){t.addEventListener?(t.addEventListener(e,i,!1),EventCache.add(t,e,i)):t.attachEvent?(t["e"+e+i]=i,t[e+i]=function(){t["e"+e+i](window.event)},t.attachEvent("on"+e,t[e+i]),EventCache.add(t,e,i)):t["on"+e]=t["e"+e+i]}BBCode.prototype={VK_TAB:9,VK_ENTER:13,VK_PAGE_UP:33,BRK_OP:"[",BRK_CL:"]",textarea:null,stext:"",quoter:null,qouted_pid:null,collapseAfterInsert:!1,replaceOnInsert:!1,construct:function(t){this.textarea=t,this.tags={},this.addTag("_quoter",function(){return'[quote="'+e.quoter+'"][qpost='+e.qouted_pid+"]"},"[/quote]\n",null,null,function(){return e.collapseAfterInsert=!0,e._prepareMultiline(e.quoterText)});var e=this;addEvent(t,"keydown",function(t){return e.onKeyPress(t,window.HTMLElement?"down":"press")}),addEvent(t,"keypress",function(t){return e.onKeyPress(t,"press")})},onclickPoster:function(t,e){var i=this.getSelection()[0];return i?(this.quoter=t,this.qouted_pid=e,this.quoterText=i,this.insertTag("_quoter")):this.insertAtCursor("[b]"+t+"[/b], "),!1},onclickQuoteSel:function(){var t=this.getSelection()[0];return t?this.insertAtCursor("[quote]"+t+"[/quote]\n"):alert("Вы не выбрали текст"),!1},emoticon:function(t){return!!t&&(this.insertAtCursor(" "+t+" "),!1)},getSelection:function(){var t=window,e="";return t.getSelection?(""===(e=t.getSelection())&&(e=this.stext),[e=(e=""+e).replace("/^s+|s+$/g",""),void 0]):[null,null]},insertAtCursor:function(t){var e=this.textarea;if(e.focus(),document.selection&&document.selection.createRange){var i=document.selection.createRange();this.replaceOnInsert||i.collapse(),i.text=t}else if(e.setSelectionRange){var n=this.replaceOnInsert?e.selectionStart:e.selectionEnd,a=e.selectionEnd,o=e.value.substr(0,n),s=e.value.substr(a);e.value=o+t+s,e.setSelectionRange(n+t.length,n+t.length)}else e.value+=t;setTimeout(function(){e.focus()},100)},surround:function(t,e,i){var n=this.textarea;n.focus(),i||(i=function(t){return t});var a=this.getSelection(),o=a[0],s=a[1];if(null===o)return!1;var r=null!==o&&""!==o;if(s){var l=t+i(o)+(e||"");if(s.text=l,s.collapse(),""!==o){for(var c=0,u=0;u<l.length;u++)"\r"===l.charAt(u)&&c++;s.moveStart("character",-e.length-o.length-t.length+c),s.moveEnd("character",-0)}else s.moveEnd("character",-e.length);this.collapseAfterInsert||s.select()}else if(n.setSelectionRange){var d=n.selectionStart,h=n.selectionEnd,p=n.scrollTop,f=n.value.substr(0,d),m=n.value.substr(h),v=i(n.value.substr(d,h-d)),g=t+v+e;n.value=f+g+m,""!==v?(n.setSelectionRange(d,d+g.length),r=!0):(n.setSelectionRange(d+t.length,d+t.length),r=!1),n.scrollTop=p,this.collapseAfterInsert&&n.setSelectionRange(d+g.length,d+g.length)}else n.value+=t+o+e;return this.collapseAfterInsert=!1,r},_cancelEvent:function(t){return t.preventDefault&&t.preventDefault(),t.stopPropagation&&t.stopPropagation(),t.returnValue=!1},onKeyPress:function(t,e){var i=String.fromCharCode(t.keyCode?t.keyCode:t.charCode);for(var n in this.tags){var a=this.tags[n];if((!a.ctrlKey||t[a.ctrlKey+"Key"])&&(a.key&&i.toUpperCase()===a.key.toUpperCase()))return"keydown"===t.type&&this.insertTag(n),this._cancelEvent(t)}if("press"===e&&t.keyCode===this.VK_TAB&&!t.shiftKey&&!t.ctrlKey&&!t.altKey)return this.insertAtCursor("[tab]"),this._cancelEvent(t);if(t.keyCode===this.VK_TAB&&!t.shiftKey&&t.ctrlKey&&!t.altKey)return this.textarea.form.post.focus(),this._cancelEvent(t);var o=this.textarea.form,s=null;return t.keyCode===this.VK_PAGE_UP&&t.shiftKey&&!t.ctrlKey&&t.altKey&&(s=o.add_attachment_box),t.keyCode!==this.VK_ENTER||t.shiftKey||t.ctrlKey||!t.altKey||(s=o.preview),t.keyCode!==this.VK_ENTER||t.shiftKey||!t.ctrlKey||t.altKey||(s=o.post),!s||(s.click(),this._cancelEvent(t))},addTag:function(t,e,i,n,a,o){a||(a="ctrl");var s={};s.id=t,s.open=e,s.close=i,s.key=n,s.ctrlKey=a,s.multiline=o,s.elt=this.textarea.form[t],this.tags[t]=s;var r=s.elt;if(r){var l=this;r.type&&"BUTTON"===r.type.toUpperCase()&&addEvent(r,"click",function(){return l.insertTag(t),!1}),r.tagName&&"SELECT"===r.tagName.toUpperCase()&&addEvent(r,"change",function(){return l.insertTag(t),!1})}else if(t&&0!==t.indexOf("_"))return alert("addTag('"+t+"'): no such element in the form")},insertTag:function(t){var e=this.tags[t];if(!e)return alert("Unknown tag ID: "+t);var i=e.open;"function"==typeof e.open&&(i=e.open(e.elt));var n=null!==e.close?e.close:"/"+i;i.charAt(0)!==this.BRK_OP&&(i=this.BRK_OP+i+this.BRK_CL),n&&n.charAt(0)!==this.BRK_OP&&(n=this.BRK_OP+n+this.BRK_CL),this.surround(i,n,e.multiline?!0===e.multiline?this._prepareMultiline:e.multiline:null)},_prepareMultiline:function(t){return(t=(t=t.replace(/\s+$/,"")).replace(/^([ \t]*\r?\n)+/,"")).indexOf("\n")>=0&&(t="\n"+t+"\n"),t}},window.HTMLElement&&window.HTMLElement.prototype.__defineSetter__&&(HTMLElement.prototype.__defineSetter__("innerText",function(t){this.innerHTML=t.replace(/\&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}),HTMLElement.prototype.__defineGetter__("innerText",function(){var t=this.ownerDocument.createRange();return t.selectNodeContents(this),t.toString()})),$(document).ready(function(){$("div.post_wrap, div.signature").each(function(){initPostBBCode($(this))})});var EventCache=function(){var t=[];return{listEvents:t,add:function(e,i,n){t.push(arguments)},flush:function(){var e,i;for(e=t.length-1;e>=0;e-=1)(i=t[e])[0].removeEventListener&&i[0].removeEventListener(i[1],i[2],i[3]),"on"!==i[1].substring(0,2)&&(i[1]="on"+i[1]),i[0].detachEvent&&i[0].detachEvent(i[1],i[2]),i[0][i[1]]=null}}}();function imgFit(t,e){return t.title="Размеры изображения: "+t.width+" x "+t.height,void 0===t.naturalHeight&&(t.naturalHeight=t.height,t.naturalWidth=t.width),t.width>e?(t.height=Math.round(e/t.width*t.height),t.width=e,t.title="Нажмите на изображение, чтобы посмотреть его в полный размер",t.style.cursor="move",!1):!(t.width===e&&t.width<t.naturalWidth)||(t.height=t.naturalHeight,t.width=t.naturalWidth,t.title="Размеры изображения: "+t.naturalWidth+" x "+t.naturalHeight,!1)}function toggle_block(t){var e=document.getElementById(t);e.style.display="none"===e.style.display?"":"none"}function toggle_disabled(t,e){document.getElementById(t).disabled=e?0:1}function rand(t,e){return t+Math.floor((e-t+1)*Math.random())}function setCookie(t,e,i,n,a,o){if("SESSION"!==i){var s=new Date;i=i||365,s.setTime(s.getTime()+24*i*60*60*1e3);var r=s.toGMTString()}else r="";document.cookie=t+"="+encodeURI(e)+(r?"; expires="+r:"")+(n?"; path="+n:cookiePath?"; path="+cookiePath:"")+(a?"; domain="+a:cookieDomain?"; domain="+cookieDomain:"")+(o?"; secure":cookieSecure?"; secure":"")}function getCookie(t){var e;return(e=new RegExp("(^|;)\\s*"+t+"\\s*=\\s*([^\\s;]+)","g").exec(document.cookie))?e[2]:null}function deleteCookie(t,e,i){setCookie(t,"",-1,e,i)}document.all&&addEvent(window,"unload",EventCache.flush);var Menu={hideSpeed:"fast",offsetCorrection_X:-4,offsetCorrection_Y:2,activeMenuId:null,clickedMenuId:null,$root:null,$menu:null,positioningType:null,outsideClickWatch:!1,clicked:function(t){t.blur(),this.clickedMenuId=this.getMenuId(t),this.$menu=$(this.clickedMenuId),this.$root=t,this.toggle()},hovered:function(t){this.activeMenuId&&this.activeMenuId!==this.getMenuId(t)&&this.clicked(t)},unhovered:function(t){},getMenuId:function(t){var e=t.attr("href");return e.substr(e.indexOf("#"))},setLocation:function(){var t=this.$root.offset();t.top+=this.$root.height()+this.offsetCorrection_Y;var e=parseInt(t.top),i=$(document).scrollTop()+$(window).height()-20,n=Math.min(e,Math.max(0,i-this.$menu.height()));e!==n&&(t.top=n),t.left+=this.offsetCorrection_X;var a=parseInt(t.left),o=$(document).scrollLeft()+$(window).width()-6,s=Math.min(a,Math.max(0,o-this.$menu.width()));a!==s&&(t.left=s),this.$menu.css(t)},fixLocation:function(){var t=this.$menu,e=parseInt(t.css("left")),i=$(document).scrollLeft()+$(window).width()-6,n=Math.min(e,Math.max(0,i-t.width()));e!==n&&t.css("left",n);var a=parseInt(t.css("top")),o=$(document).scrollTop()+$(window).height()-20,s=Math.min(a,Math.max(0,o-t.height()));a!==s&&t.css("top",s)},toggle:function(){this.activeMenuId&&this.activeMenuId!==this.clickedMenuId&&$(this.activeMenuId).hide(this.hideSpeed),this.$menu.is(":visible")?(this.$menu.hide(this.hideSpeed),this.activeMenuId=null):(this.showClickedMenu(),this.outsideClickWatch||($(document).one("mousedown",function(t){Menu.hideClickWatcher(t)}),this.outsideClickWatch=!0))},showClickedMenu:function(){this.setLocation(),this.$menu.css({display:"block"}),this.activeMenuId=this.clickedMenuId},hideClickWatcher:function(t){this.outsideClickWatch=!1,this.hide(t)},hide:function(t){this.$menu&&this.$menu.hide(this.hideSpeed),this.activeMenuId=this.clickedMenuId=this.$menu=null}};function Ajax(t,e,i){this.url=t,this.type=e,this.dataType=i,this.errors={}}$(document).ready(function(){$("body").append($("div.menu-sub")),$("a.menu-root").click(function(t){return t.preventDefault(),Menu.clicked($(this)),!1}).hover(function(){return Menu.hovered($(this)),!1},function(){return Menu.unhovered($(this)),!1}),$("div.menu-sub").mousedown(function(t){t.stopPropagation()}).find("a").click(function(t){Menu.hide(t)}),$("input").filter(".hint").one("focus",function(){$(this).val("").removeClass("hint")}).end().filter(".error").one("focus",function(){$(this).removeClass("error")})}),Ajax.prototype={init:{},callback:{},state:{},request:{},params:{},form_token:"",hide_loading:null,exec:function(t,e=!1){this.request[t.action]=t,t.form_token=this.form_token,this.hide_loading=e,$.ajax({url:this.url,type:this.type,dataType:this.dataType,data:t,success:ajax.success,error:ajax.error})},success:function(t){var e=t.action;if(t.raw_output&&$("body").prepend(t.raw_output),t.sql_log&&($("#sqlLog").prepend(t.sql_log+"<hr />"),fixSqlLog()),t.update_ids)for(id in t.update_ids)$("#"+id).html(t.update_ids[id]);if(t.prompt_password){var i=prompt("Для доступа к данной функции, пожалуйста, введите свой пароль","");if(i)(n=ajax.request[e]).user_password=i,ajax.exec(n);else ajax.clearActionState(e),ajax.showErrorMsg("Введен неверный пароль")}else if(t.prompt_confirm){var n;if(window.confirm(t.confirm_msg))(n=ajax.request[e]).confirmed=1,ajax.exec(n);else ajax.clearActionState(e)}else t.error_code?(ajax.showErrorMsg(t.error_msg),console.log(t.console_log),$(".loading-1").removeClass("loading-1").html("error")):(ajax.callback[e](t),ajax.clearActionState(e))},error:function(t,e){},clearActionState:function(t){ajax.state[t]=ajax.request[t]=""},showErrorMsg:function(t){alert(t)},callInitFn:function(t){t.stopPropagation();var e=ajax.params[$(this).attr("id")],i=e.action;if("readyToSubmit"===ajax.state[i]||"error"===ajax.state[i])return!1;ajax.state[i]="readyToSubmit",ajax.init[i](e)},setStatusBoxPosition:function(t){var e=$(document).scrollTop(),i=$(document).scrollLeft()+$(window).width()-8,n=Math.max(0,i-t.width());t.css({top:e,left:n})},makeEditable:function(t,e){var i=$("#"+t),n=$(".editable",i),a=$("#editable-tpl-"+e).html();n.hide().after(a);var o=$(".editable-inputs",i);"input"!==e&&"textarea"!==e||$(".editable-value",o).val($.trim(n.text())),$("input.editable-submit",o).click(function(){var e=ajax.params[t],i=$(".editable-value","#"+t);e.value=1===i.size()?i.val():i.filter(":checked").val(),e.submit=!0,ajax.init[e.action](e)}),$("input.editable-cancel",o).click(function(){ajax.restoreEditable(t)}),o.show().find(".editable-value").focus(),i.removeClass("editable-container")},restoreEditable:function(t,e){var i=$("#"+t),n=$(".editable",i);$(".editable-inputs",i).remove(),e&&n.text(e),n.show(),ajax.clearActionState(ajax.params[t].action),ajax.params[t].submit=!1,i.addClass("editable-container")}},$(document).ready(function(){$("#ajax-loading").ajaxStart(function(){!1===ajax.hide_loading&&($("#ajax-error").hide(),$(this).show(),ajax.setStatusBoxPosition($(this)))}),$("#ajax-loading").ajaxStop(function(){!1===ajax.hide_loading&&$(this).hide()}),$("#ajax-error").ajaxError(function(t,e){var i=e.status,n=e.statusText;200===i&&(i="",n="неверный формат данных"),$(this).html("Ошибка в: <i>"+ajax.url+"</i><br /><b>"+i+" "+n+"</b>").show(),ajax.setStatusBoxPosition($(this))}),$("var.ajax-params").each(function(){var t=$.evalJSON($(this).html());t.event=t.event||"dblclick",ajax.params[t.id]=t,$("#"+t.id).bind(t.event,ajax.callInitFn),"click"!==t.event&&"dblclick"!==t.event||$("#"+t.id).addClass("editable-container")})});var array_for_rand_pass=["a","A","b","B","c","C","d","D","e","E","f","F","g","G","h","H","i","I","j","J","k","K","l","L","m","M","n","N","o","O","p","P","q","Q","r","R","s","S","t","T","u","U","v","V","w","W","x","X","y","Y","z","Z",0,1,2,3,4,5,6,7,8,9],array_rand=function(t){var e=t.length,i=Math.random()*e;return Math.floor(i)},autocomplete=function(t){for(var e="",i=1;i<=8;i++)e+=array_for_rand_pass[array_rand(array_for_rand_pass)];var n=Math.ceil(window.screen.availWidth/2)-150,a=Math.ceil(window.screen.availHeight/2)-50;t?$("div#autocomplete_popup").show(1e3):$("div#autocomplete_popup").css({left:n+"px",top:a+"px"}).show(1e3),$("input#pass, input#pass_confirm, div#autocomplete_popup input").each(function(){$(this).val(e)})};$(document).ready(function(){var t,e;$("span#autocomplete").click(function(){autocomplete()});var i=!1;$("div#autocomplete_popup div.title").mousedown(function(n){i=!0,t=n.clientX,e=n.clientY}),$("div#autocomplete_popup div.title").mousemove(function(n){var a=$("div#autocomplete_popup"),o=parseInt(a.css("left")),s=parseInt(a.css("top"));i&&(n.clientX<t?a.css("left",o-(t-n.clientX)+"px"):a.css("left",o+(n.clientX-t)+"px"),n.clientY<e?a.css("top",s-(e-n.clientY)+"px"):a.css("top",s+(n.clientY-e)+"px"),t=n.clientX,e=n.clientY)}),$("div#autocomplete_popup div.title").mouseup(function(){i=!1}).mouseout(function(){i=!1})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
