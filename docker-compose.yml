services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./:/var/www/html:cached
      - caddy_data:/data/caddy
      - caddy_config:/config/caddy
      - ./internal_data:/var/www/html/internal_data
    environment:
      - TP_HOST=${TP_HOST:-localhost}
      - TP_PORT=${TP_PORT:-80}
      - APP_ENV=${APP_ENV:-production}
      - APP_CRON_ENABLED=${APP_CRON_ENABLED:-true}
      - APP_DEMO_MODE=${APP_DEMO_MODE:-false}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-torrentpier}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - SSL_ENABLED=${SSL_ENABLED:-false}
      - SSL_EMAIL=${SSL_EMAIL:-}
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-torrentpier}
      MYSQL_USER: ${DB_USERNAME:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./install/sql/mysql.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  cron:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "while true; do sleep 600; curl -f http://app/cron.php || true; done"
    depends_on:
      - app
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
